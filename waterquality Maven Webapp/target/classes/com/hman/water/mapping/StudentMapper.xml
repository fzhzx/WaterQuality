<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hman.water.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.hman.water.model.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="card_id" property="cardId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, student_id, card_id, address, email, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hman.water.model.Student" >
    insert into student (id, name, password, 
      student_id, card_id, address, 
      email, remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{studentId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hman.water.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hman.water.model.Student" >
    update student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hman.water.model.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      card_id = #{cardId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="com.hman.water.model.Student" id="StuAndSubResultMap" extends="BaseResultMap">
  	<collection property="stuSubLists" javaType="list" ofType="com.hman.water.model.StuSub">
  		<id property="id" column="ss_id"/>
  		<result property="stuId" column="ss_stu_id"/>
  		<result property="subId" column="ss_sub_id"/>
  		<association property="subject" javaType="com.hman.water.model.Subject">
  			<id property="id" column="sub_id"/>
  			<result property="subName" column="sub_name"/>
  		</association>
  	</collection>
  </resultMap>
  <select id="selectStuAndSubById" parameterType="java.lang.Integer" resultMap="StuAndSubResultMap">
	  SELECT
		dbo.student.id,
		dbo.student.name,
		dbo.student.password,
		dbo.student.student_id,
		dbo.student.card_id,
		dbo.student.address,
		dbo.student.email,
		dbo.student.remark,
		dbo.stu_sub.id ss_id,
		dbo.stu_sub.stu_id ss_stu_id, 
		dbo.stu_sub.sub_id ss_sub_id,
		dbo.subject.id sub_id,
		dbo.subject.sub_name sub_name
		
		FROM
		dbo.stu_sub
		JOIN dbo.student ON dbo.stu_sub.stu_id = dbo.student.id
		JOIN dbo.subject ON dbo.stu_sub.sub_id = dbo.subject.id
		
		where student.id = #{id,jdbcType=INTEGER};
  </select>
  
</mapper>